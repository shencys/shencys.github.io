<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>狐妖最新章节分析</title>
      <link href="/2019/08/18/%E7%8B%90%E5%A6%96%E6%9C%80%E6%96%B0%E7%AB%A0%E8%8A%82%E5%88%86%E6%9E%90/"/>
      <url>/2019/08/18/%E7%8B%90%E5%A6%96%E6%9C%80%E6%96%B0%E7%AB%A0%E8%8A%82%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>hello,我又闲着没事干开始猜剧情了。</p><p>最近的一话中，王少爷依旧在回忆之中，似乎是之前竹叶篇的成功让小新意识到要想获得成功，重心还是得放在古代，所以最近几话都在讲古代的故事。但是这一话却出现了一把神奇的剑：这把剑和王权剑一个档次。</p><p><img src="/images/实例1.jpg" alt></p><p><img src="/images/实例2.jpg" alt></p><p>可以看到，这个长得有点奇怪的老哥手中这一把闪着蓝光的剑也是非常狠的，从逼格上来说和王权剑差不多，而且从他的那一句“大伯”可以看出他和王权无暮的亲戚关系，那么我们就来猜测一下这个老哥和那把剑的来历：<br>1.这个老哥可能也是王权家人。有可能是王权无暮的哥哥或者表哥之类的，毕竟这种剑法与那句“沙妖是砍不死的”，很有王权家的风范，也和后来的王权霸业一样对妖没好感。</p><p>2.这个老哥可能是张家人，就王权霸业的面具组织来看，李家也是用剑的高手，而且后来张正的黑剑也是非常强，所以这个老哥可能是张家年轻一代的最强者。</p><p>3.关于那把剑。后世王权霸业劈开墙的时候，天门老儿说过，只有一把剑能够劈开这堵墙。从剧情来看，这把剑应该不是王权剑（毕竟王权剑的盗版是第二把，如果是的话，天门老儿应该认识王权剑）所以很有可能，这把剑就是当年劈开天门的那把剑，而且很有可能，这把剑因为某种原因，留在了圈外。</p><p>但愿小新放过王权无暮，别让他像霸业那样惨。</p><p>ps：女主你到是快出来啊！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 狐妖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown编辑器推荐</title>
      <link href="/2019/08/14/markdown%E7%BC%96%E8%BE%91%E5%99%A8%E6%8E%A8%E8%8D%90/"/>
      <url>/2019/08/14/markdown%E7%BC%96%E8%BE%91%E5%99%A8%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<p>由于闲得谎，开始写这些奇怪的东西。<br>众所周知，markdown是写blog的主流语法，但是在写的时候，选一个好的编辑器是非常重要的，就好比你在记事本上面写c++代码，不CE算你的本事。</p><h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><p>说到markdown编辑器，那就必须将Typora编辑器了。很多人写markdown都喜欢在这个编辑器上写，主要是这个编辑器页面非常的简单清新，一般来说，我的文章都是在这个软件上写的，毕竟看着这种极简风格的编辑器写起文章来也非常舒服，而且作为一个实时渲染的编辑器，有哪里语法错误也是一目了然，写数学公式的预览速度也是杠杠的，所以非常推荐是使用这个编辑器。<br><img src="/images/20170622092419560.jpg" alt="enter description here"><br>ps:这个编辑器的主题有很多，感觉上还是默认的github最好。建议在win10系统上使用。</p><h1 id="VS-code"><a href="#VS-code" class="headerlink" title="VS code"></a>VS code</h1><p>emmm……这个编辑器说实话是我从同学那里听来的，听上去很高大上的样子…但是说句实话这个编辑器还真是挺万能的，不管是写代码、写作文、还是写博客，在这个编辑器上就足够了，毕竟他的功能太多了…不过我个人并不是很推荐这个编辑器，因为单就markdown编辑来说，这个编辑器并非上乘之选，因为单就给人的感觉上，这个编辑器没有Typora好，而就功能上来说吗，他每有别的预览示编辑器全，如果你不希望你的桌面上快捷方式堆得太多的话，一个VS code既就可以顶的上一个markdown编辑器+一个编译器+一个word编辑器。</p><h1 id="专业编辑器"><a href="#专业编辑器" class="headerlink" title="专业编辑器"></a>专业编辑器</h1><p>当你写博客写多了之后，你就会逐渐发现，Typora的弊端也有不少，比如说，你很难直接看到markdown的源码，而且有的时候在打文的时候，用Typora写起来实在有些不顺手(不过打字机模式还是蛮好的)，并且看图片实在有些。。。所以用一些较为专业的markdown编辑器十分有必要，一般来说，这些编辑器都有一个源码栏和一个预览栏，这样的预览效果和编辑效果都十分优秀，这里介绍几款比较优秀的离线编辑器：</p><h2 id="马克飞象"><a href="#马克飞象" class="headerlink" title="马克飞象"></a>马克飞象</h2><p><img src="/images/maek.png" alt="马克飞象"><br>马克飞象其实严格意义上并非客户端式的编辑器，它的原型是一个网上平台是的编辑器。<a href="https://maxiang.io/" target="_blank" rel="noopener">点击进入</a>,而我觉得这个编辑器还是非常简洁的，没有上方的一堆工具栏，用起来也是十分顺手，不过看着这个名字，实在是高大不起来。。。</p><h2 id="cmd-markdown"><a href="#cmd-markdown" class="headerlink" title="cmd markdown"></a>cmd markdown</h2><p>说实话，这个编辑器我是又爱又恨，爱的是他的清新风格，写起来是十分的舒服，但是。。。这个编辑器·的保存系统我却很无奈，就是我最近在这个编辑器上写了好几篇文章，但是。。。我基本没有保存成功过。</p><p><img src="/images/cmdmarkdown.png" alt></p><h2 id="小书匠"><a href="#小书匠" class="headerlink" title="小书匠"></a>小书匠</h2><p>这个编辑器还是非常专业的，上面的一排跟word稳当工具栏一样的东西还是非常好用的，只是开始界面有点。。。</p><h2 id="有道云笔记"><a href="#有道云笔记" class="headerlink" title="有道云笔记"></a>有道云笔记</h2><p>好吧。。。并不是很想用这款东西，就好像vs code的简略版。。。</p><p>以上就是我对markdown编辑器的推荐，谢谢。</p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dijkstra堆优化的小技巧</title>
      <link href="/2019/08/10/dijkstra%E5%A0%86%E4%BC%98%E5%8C%96%E7%9A%84%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/"/>
      <url>/2019/08/10/dijkstra%E5%A0%86%E4%BC%98%E5%8C%96%E7%9A%84%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>最短路是图论中非常常见的一种算法，一般来所，很多考试的第三题都会多多少少和最短路算法沾点边，而许多oier常用的是SPFA算法，也就是队列优化后的Bellman-Ford算法，但是实际上，这种算法具有非常大的不稳定性，也就是说，只要出题人愿意，他可以分分钟卡死你。所以一般考试时，只要数据没有到千万级别，一般我们会采用dijkstra堆优化的方式来写最短路。</p><p>所谓dijkstra，就是红白点的一种最短路算法，每次找到所有点中dis值最小的点，以其为起始点来更新其他点的dis值。一般来说，这种算法的实际复杂度为$n^2$,常数上不大(确信)，而我们发现，这里有一部是需要找到所有点中dis值的最小值，我们就可以使用对的方式来优化，可以将复杂度降至(nlogn)(实际上由于点数的膨胀，复杂度可能会超过$2nlogn$),那么在考场上，手写堆是十分耗时的，而且万一写错就彻底爆炸了，所有我们可以采用stl中的一种类堆结构：单调队列(priority_queue)来维护。</p><p>算法原理很简单，就是用单调队列来维护每次找寻的最小值，但是实际操作中却长长有一点小问题：<br>1.默认的stl是从大到小排列的，所以我们要重载小于号为大于号才能让其变成小根堆。</p><p>2.一般来说，这个算法每个点的dis值是在不断变化的，所以我们需要将每个变化的值，连同其坐标一起丢入单调队列之中，每次去除队首元素时，首先判断其是否被用过。</p><p>下面附代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define int long long</span><br><span class="line">const int maxn=10001,maxm=500001;</span><br><span class="line">struct node&#123;</span><br><span class="line">int w,z;</span><br><span class="line">&#125;p;</span><br><span class="line">bool operator&lt;(node a,node b)</span><br><span class="line">&#123;</span><br><span class="line">return a.z&gt;b.z;</span><br><span class="line">&#125;</span><br><span class="line">struct Edge&#123;</span><br><span class="line">int to,next,dis;</span><br><span class="line">&#125;edge[maxm];</span><br><span class="line">int head[maxn],num_edge,dis[maxn],n,m,s,t,a,b,c,use[maxn];</span><br><span class="line">void add_edge(int from,int to,int dis)</span><br><span class="line">&#123;</span><br><span class="line">edge[++num_edge].dis=dis;</span><br><span class="line">edge[num_edge].to=to;</span><br><span class="line">edge[num_edge].next=head[from];</span><br><span class="line">head[from]=num_edge;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;node&gt; q;</span><br><span class="line">void push(int w)</span><br><span class="line">&#123;</span><br><span class="line">node a;</span><br><span class="line">a.w=w;</span><br><span class="line">a.z=dis[w];</span><br><span class="line">q.push(a);</span><br><span class="line">&#125;</span><br><span class="line">void dijkstra(int s)</span><br><span class="line">&#123;</span><br><span class="line">push(s);</span><br><span class="line">while(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">p=q.top();</span><br><span class="line">q.pop();</span><br><span class="line">if(use[p.w]==1)</span><br><span class="line">continue ;</span><br><span class="line">use[p.w]=1;</span><br><span class="line">for(int i=head[p.w];i;i=edge[i].next)</span><br><span class="line">&#123;</span><br><span class="line">if(dis[edge[i].to]&gt;dis[p.w]+edge[i].dis)</span><br><span class="line">dis[edge[i].to]=dis[p.w]+edge[i].dis,push(edge[i].to);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;node&gt; qwq;</span><br><span class="line">void test()</span><br><span class="line">&#123;</span><br><span class="line">node a1,a2,a3;</span><br><span class="line">a1.w=1,a1.z=2;</span><br><span class="line">a2.z=4;</span><br><span class="line">a3.z=12;</span><br><span class="line">qwq.push(a1);</span><br><span class="line">qwq.push(a2);</span><br><span class="line">qwq.push(a3);</span><br><span class="line">cout&lt;&lt;qwq.top().z&lt;&lt;&quot; &quot;;</span><br><span class="line">qwq.pop();</span><br><span class="line">cout&lt;&lt;qwq.top().z&lt;&lt;&quot; &quot;;</span><br><span class="line">qwq.pop();</span><br><span class="line">cout&lt;&lt;qwq.top().z&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">signed main()</span><br><span class="line">&#123;</span><br><span class="line">//test();</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">dis[i]=2147483647;</span><br><span class="line">&#125;</span><br><span class="line">dis[s]=0;</span><br><span class="line">for(int i=1;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">add_edge(a,b,c);</span><br><span class="line">&#125;</span><br><span class="line">dijkstra(s);</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;dis[i]&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=1;i=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;dis[i]+</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>乘法逆元</title>
      <link href="/2019/08/06/%E4%B9%98%E6%B3%95%E9%80%86%E5%85%83/"/>
      <url>/2019/08/06/%E4%B9%98%E6%B3%95%E9%80%86%E5%85%83/</url>
      
        <content type="html"><![CDATA[<h1 id="乘法逆元"><a href="#乘法逆元" class="headerlink" title="乘法逆元"></a>乘法逆元</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>如果$ab\equiv1 (\mod p)$,则称b为a关于1 $\%$p的逆元，计b为inv(a).</p><h2 id="用处"><a href="#用处" class="headerlink" title="用处"></a>用处</h2><p>在写代码时，很容易遇到要求$\frac{a}{b}\%p$的情况，这样一般求起来很绝望，因为很多人喜欢每个数都模p，这样在加减乘中都是可行的，但是在除中确实不可行的，所以这种情况下我们就要用到乘法逆元。很容易发现，a关于1模p的逆元就是a在模p意义下的倒数，所以$\frac{a}{b}\%p=a \times inv(b)$</p><h2 id="前置知识列表"><a href="#前置知识列表" class="headerlink" title="前置知识列表"></a>前置知识列表</h2><h3 id="欧拉定理"><a href="#欧拉定理" class="headerlink" title="欧拉定理"></a>欧拉定理</h3><p>$a^{\varphi(n)}\equiv 1 (\mod n)$</p><p>$\varphi(n)$表示小于n中与n互质的数；</p><p>证明：<br>设小于n中与n互质的数为$x_1,x_2,x_3……x_{\varphi(n)}$,将其中的每一个数都乘以a(a与n互质)，得到一个新的数列：{$ax_1,ax_2,……ax_{\varphi(n)}$,},我们将新数列中的每一项模n，可已得到原数列完全相同的数列。既对于任何数</p><p>$x_i \equiv ax_i(\mod n)$,换而言之，新数列中的每一个数模n没有重复。因为a与n互质，任意$x_i$与n也互质，所以有gcd(n,$axi$)=1,根据欧几里得定理，得到gcd(n,$ax_i\% $),n所以任意一个新数列中的数都与n互质。同时，他们也无重复，用反证法来证明，若$ax_1\%n=ax_2\%n$,则有，$n|(ax1-ax2)$,因为a与n互质且(x1-x2)小于n,所以等式不成立，故有新数列无重复元素。</p><p>那么我们将两个式子合并一下，$\coprod\limits_{i=1}^{\varphi(n)}ax_i\equiv \coprod\limits_{i=1}^{\varphi(n)}x_i$ ($\mod p$)</p><p>化简：$a^{\varphi(n)}\equiv\  1 (mod\   n)$</p><h3 id="费马小定理"><a href="#费马小定理" class="headerlink" title="费马小定理"></a>费马小定理</h3><p>对于任何数a 和质数 p ,$a^{p-1}\equiv 1 \ (mod\ p)$</p><p>这个真的没什么好讲的，其实就是欧拉定理的一个特殊情况，由于p是个质数，那么$\varphi(p)=p-1$,根据欧拉定理，$a^{\varphi(p)}\equiv 1 (\mod p)$，所以成立(还是想吐槽一句，费马你是捡漏了吗？)</p><h3 id="欧拉定理拓展"><a href="#欧拉定理拓展" class="headerlink" title="欧拉定理拓展"></a>欧拉定理拓展</h3><p>$a^{b}\equiv\ a^{b  \mod \varphi(n)}\ (mod \ n)$</p><p>证明：<br>$a^{b-b  \mod \varphi(n)}\times a^{b  \mod \varphi(n)}\ \equiv\ a^{b  \mod \varphi(n)}\ (mod \ n)$</p><p>$a^{b-b  \mod \varphi(n)}\equiv 1 (\mod n )$</p><p>因为$b-b\mod \varphi(n)| \varphi(n)$</p><p>设$b-b  \mod \varphi(n)=k\varphi(n)$</p><p>原式变为$a^{k\varphi(n)}\equiv 1 (\mod n)$</p><p>$(a^k)^{\varphi(n)}\equiv 1(\mod n)$</p><p>因为a与n互质，$a^k$与n也互质，</p><p>根据欧拉定理，原式成立。</p><h3 id="拓展欧几里得定理"><a href="#拓展欧几里得定理" class="headerlink" title="拓展欧几里得定理"></a>拓展欧几里得定理</h3><p>$ax1 + by1=gcd(a,b)$</p><p>$bx2 + (a\%b)y2=gcd(b,a\%b)$</p><p>$ax1+ by1=bx2+ [a-a/b*b]y2$</p><p>$ax+ by1=bx2 + ay2-\frac{a}{b}\ y2 \times b$</p><p>$ax1 \times by1 =ay2 \times b(x2-a/by2)$</p><p>既x1=y2,y1=x2-a/b*y2</p><h2 id="乘法逆元的计算"><a href="#乘法逆元的计算" class="headerlink" title="乘法逆元的计算"></a>乘法逆元的计算</h2><h3 id="费马小定理求逆元"><a href="#费马小定理求逆元" class="headerlink" title="费马小定理求逆元"></a>费马小定理求逆元</h3><p>根据费小定理，我们可以将原式子化为$a \times a^{n-2}\equiv 1(\mod n)$</p><p>也就是我们可以用快速幂求出$a^{n-2}$,就可以了。</p><p>但是这样当多次调用逆元时不排除去世的可能。</p>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 乘法逆元 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组合数学提高</title>
      <link href="/2019/08/04/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6%E6%8F%90%E9%AB%98/"/>
      <url>/2019/08/04/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6%E6%8F%90%E9%AB%98/</url>
      
        <content type="html"><![CDATA[<h1 id="组合数学提高"><a href="#组合数学提高" class="headerlink" title="组合数学提高"></a>组合数学提高</h1><h2 id="二项式定理"><a href="#二项式定理" class="headerlink" title="二项式定理"></a>二项式定理</h2><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><p>嗯，这个东西就是杨辉三角的公式版</p><p>$(x+y)^n=\sum\limits_{k=0}^{n}C_n^kx^{n-k}y^k$</p><p>将这个公式拆开，得到了这样一个玄学公式：</p><p>$(x+y)^n=C_n^0x^n+C_n^1x^{n-1}y+C_n^2x^{n-2}y^2+……+C_n^{n-1}xy^{n-1}+C_n^ny^n$</p><p>你看这个公式<del>他又大又圆</del>是不是很像某个小学数奥的东西呢？</p><p>没错，这玩意和杨辉三角几乎一毛一样，所以实际上是杨辉三角的一种实现方式。</p><h3 id="等价形式"><a href="#等价形式" class="headerlink" title="等价形式"></a>等价形式</h3><p>$(x+y)^n=\sum\limits_{k=0}^{n}C_n^{n-k}x^{n-k}y^k$</p><p>$(x+y)^n=\sum\limits_{k=0}^{n}C_n^{n-k}x^{k}y^{n-k}$</p><p>$(x+y)^n=\sum\limits_{k=0}^{n}C_n^{k}x^{k}y^{n-k}$</p><p>$(1+x)^n=\sum\limits_{k=0}^nC_n^kx^k$</p><h2 id="我也不知道叫什么定理1"><a href="#我也不知道叫什么定理1" class="headerlink" title="我也不知道叫什么定理1"></a>我也不知道叫什么定理1</h2><p>$C_n^0-C_n^1+C_n^2-C_n^3+……+(-1)^nC_n^n=0$</p><p>即$C_n^0+C_n^2+……=C_n^1+    C_n^3+……=2^{n-1}$</p><p>证明：上面那个我也不知道怎么证，反正它就是对的。。。</p><p>下面那个，根据二项式定理$C_n^0+C_n^1+C_n^2+C_n^3+……+C_n^n=(1+1)^n=2^n$</p><p>又由于$C_n^0+C_n^2+……=C_n^1+    C_n^3+……$,所以其任意一项等于$2^n\div 2=2^{n-1}$</p><p>证毕(确信)</p><h2 id="我也不知道叫什么定理2"><a href="#我也不知道叫什么定理2" class="headerlink" title="我也不知道叫什么定理2"></a>我也不知道叫什么定理2</h2><p>$kC_n^k=nC_{n-1}^{k-1}$</p><p>证明:左式=$k\frac{n!}{(n-k)!k!}=\frac{n!}{(n-k)!k!\div k}$</p><p>​          右式=$n\frac{n!\div n}{(n-k)!k!\div k}=\frac{n!}{(n-k)!k!}$</p><p>​         左式等于右式，证毕。</p><h2 id="我也不知道叫什么定理3"><a href="#我也不知道叫什么定理3" class="headerlink" title="我也不知道叫什么定理3"></a>我也不知道叫什么定理3</h2><p>$C_n^1+2C_n^2+……+nC_n^n=n2^{n-1}$</p><p>既$\sum\limits_{i=1}^niC_n^i=n2^{n-1}$</p><p>证明：使用<strong>我也不知道什么定理2 </strong>得到$1C_n^1 = nC_{n-1}^0$,$2 C_n^2 = nC_{n-1}^1$</p><p>这样就得到了原式$=n C_{n-1}^0+nC_{n-1}^{1}+……+nC_{n-1}^{n-1}$</p><p>​                                  $=n(C_{n-1}^0+C_{n-2}^1+……+C_{n-1}^{m-1})$</p><p>​                                   $=n2^{n-1}$</p><h2 id="我也不知道叫什么定理4"><a href="#我也不知道叫什么定理4" class="headerlink" title="我也不知道叫什么定理4"></a>我也不知道叫什么定理4</h2><p>$1C_n^1+4C_n^2+9C_n^3+……n^2C_n^n=n(n+1)2^{n-2}$</p><p>换而言之就是 $\sum\limits_{i=1}^{n}i^2C_n^i=n(n+1)2^{n-2}$</p><p>证明(这个证明可能会用到前面的很多性质，最好把前面的都看懂了在证明)</p><p>$\sum\limits_{i=1}^{n}i^2C_n^i$</p><p>=$\sum\limits_{i=1}^ni\times n \times C_{n-1}^{i-1}$</p><p>$=\sum\limits_{i=0}^{n-1}C_{n-1}^{i} \times(i+1) \times n$</p><p>$=(\sum\limits_{i=0}^{n-1}C_{n-1}^i\times i+\sum\limits_{i=0}^{n-1}C_{n-1}^i)\times n$</p><p>这里我们将这个式子拆开来，不然实在有点难理解：</p><p>$\sum\limits_{i=0}^{n-1}C_{n-1}^i\times i=\sum\limits_{i=1}^{n-1}iC_{n-1}^i=(n-1)2^{n-2}$</p><p>$\sum\limits_{i=0}^{n-1}C_{n-1}^i=2^{n-1}$</p><p>原式$=((n-1)2^{n-2}+2^{n-1}) \times n$</p><p>​        =$(n+1)2^{n-1}\times n$</p><p>证毕。</p><h2 id="我也不知道叫什么定理5"><a href="#我也不知道叫什么定理5" class="headerlink" title="我也不知道叫什么定理5"></a>我也不知道叫什么定理5</h2><p>$\sum\limits_{i=0}^{n}{C_n^i}^2=C_{2n}^n$</p><p>这个性质我们用感性理解的方式，用例子来说明：<br>两个班，每个班有n个妹子，gyf要从两个班中选择n个妹子来<del>上</del>，那么他的选择总方案是$C_{    2n}^n$,这非常明显，不必多说了。同时我们可以让gyf从一个班中选择i个妹子($0\le i \le n$ ),另一个班中选择(n-i)个妹子，这样的方案数是$C_{n}^i<em>C_{n}^{n-i}$,同时枚举i，就得到总方案数为$\sum\limits_{i=0}^n C_{n}^i</em>C_{n}^{n-i}$,应为$C_{n}^i=C_{n}^{n-i}$,所以总方案数为$\sum\limits_{i=0}^{n}{C_n^i}^2$,很明显两种选择方法是等价的，故性质成立。</p><h2 id="康拓展开"><a href="#康拓展开" class="headerlink" title="康拓展开"></a>康拓展开</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>给你一个数列，求这个数列在所有与其相同的数列中的字典序排名(相同的定义是，长度相同且组成元素相同)</p><h3 id="内容-1"><a href="#内容-1" class="headerlink" title="内容"></a>内容</h3><p>$ans=\sum\limits_{i=1}^{n-1}a_i \times (n-i)!$</p><p>$a_i$表示排名在i之后且字典序小于i的元素。</p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><p>数列为{$3,1,4,5,2$},求其排名</p><p>对于3来说，后面有两个数比它小，所以啊a[1]=2;</p><p>对于1来说，后面没有数比它小，所以a[2]=0;</p><p>对于4来说，后面有一个数比它小，所以a[3]=1;</p><p>对于5来说，后面有一个数比它小，所以a[4]=1;</p><p>所以答案就是$4! \times 2+3! \times 0 +2! \times 1 +1! \times 1$</p><h2 id="康拓逆展开"><a href="#康拓逆展开" class="headerlink" title="康拓逆展开"></a>康拓逆展开</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>一个长度为5的序列有1至5组成，其字典序排名为107，问这个序列。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>用和康拓展开相同的思维：在第一位，$107 \div 4!=4 $余$10$,所以第一位之后有4位比它大，故第一位为5</p><p>这样类推下去 就得到了答案。</p><h2 id="第一类斯特林数"><a href="#第一类斯特林数" class="headerlink" title="第一类斯特林数"></a>第一类斯特林数</h2><p>嗯，看到这个标题是不是觉得无比高大上，但是实际上，只要不涉及到更高层次，这种数比其他很多数简单很多。。。</p><h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>将n个数分为k个环，求方案数。</p><h3 id="解法-1"><a href="#解法-1" class="headerlink" title="解法"></a>解法</h3><p>$s_n^k$表示将n个数分为k个环的方案数</p><p>有以下转移方程：$s_n^k=(n-1)s_{n-1}^k+s_{n-1}^{k-1}$</p><h3 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h3><p>将新进来的数分成两种，既放入已有的圆中或新开一个圆，在旧圆中共有n-1个位置，所以就有了上面的公式。</p><h2 id="第二类斯特林数"><a href="#第二类斯特林数" class="headerlink" title="第二类斯特林数"></a>第二类斯特林数</h2><h3 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h3><p>将n个数分成k个集合，求方案数</p><h3 id="解法-2"><a href="#解法-2" class="headerlink" title="解法"></a>解法</h3><p>$S_n^k$表示将n个数分成k个集合的方案数。</p><p>$S_n^k=kS_{n-1}^k+S_{n-1}^{k-1}$</p><h3 id="证明-1"><a href="#证明-1" class="headerlink" title="证明"></a>证明</h3><p>将新进来的数分为两类，在已有集合中的方案数为$kS_{n-1}^k$,另一种为$S_{n-1}^{k-1}$</p><h2 id="卡特兰数"><a href="#卡特兰数" class="headerlink" title="卡特兰数"></a>卡特兰数</h2><h3 id="问题-3"><a href="#问题-3" class="headerlink" title="问题"></a>问题</h3><p>有一张n*n的图，求从左下角走到右上角且不经过中线的方案。</p><h3 id="解法-3"><a href="#解法-3" class="headerlink" title="解法"></a>解法</h3><p><img src="\images\卡特兰数.png" alt="卡特兰数"></p><p>如图，我们发现，任意一条经过中线的路径(下文称为非法路径)，都会经过对角线上面的一条线，也就是图中的绿线，而将过绿线之后的路径关于绿线对称，就发现每一条非法路径的终点都是点(n+1,n-1)，所以可以看成每条非法路径都可以变成一条从(0,0)到点(n+1,n-1)的路径。</p><p>我们考虑用组合数来表示总路径数：每一条路径都可以看成是由n次向上和n次向右组成的，所以我们只要找出2n次行动中n次向上的可能，就是方案数了，既$C_{2n}^n$,所以一张n*n的图，方案数为$C_{2n}^n-C_{2n}^{n+1}$,化简得$Catalan(n)=\frac{1}{n+1}C_{2n}^n$</p><h3 id="其他形式："><a href="#其他形式：" class="headerlink" title="其他形式："></a>其他形式：</h3><p>$Catalan(n)=\frac{1}{n+1}\sum\limits_{i=0}^n{C_n^i}^2$</p><p>$Catalan(n)=\sum\limits_{i=0}^nCatalan(i)Caltalan(n-i),Catalan(0)=1$</p><p>$Catalan(n+1)=\frac{2(2n+1)}{n+2}Catalan(n),Catalan(0)=1$</p><h2 id="卢卡斯定理"><a href="#卢卡斯定理" class="headerlink" title="卢卡斯定理"></a>卢卡斯定理</h2><p>$C_n^m \%  p=C_{n/p}^{m/p} \times C_{n\%p}^{m\%p}$</p><p>具体证明很复杂，很复杂，建议先去用起来，等到数论成熟了再去用。</p>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
            <tag> 组合数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组合数学入门</title>
      <link href="/2019/08/04/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
      <url>/2019/08/04/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="组合数学入门"><a href="#组合数学入门" class="headerlink" title="组合数学入门"></a>组合数学入门</h1><p><del>由于老师直播卡到自闭才开始学习</del></p><h2 id="抽屉原理"><a href="#抽屉原理" class="headerlink" title="抽屉原理"></a>抽屉原理</h2><h3 id="内容："><a href="#内容：" class="headerlink" title="内容："></a>内容：</h3><p>把 n+1 件东西放入 n 个抽屉，则至少有一个抽屉里放两件或两件以上的东西。</p><p>从令一角度说，把 n-1 件东西放入 n  个抽屉，则至少一个抽屉是空的。</p><h3 id="证明："><a href="#证明：" class="headerlink" title="证明："></a>证明：</h3><p>对于第一条，考虑最差情况，既每个球都放到一个单独的抽屉里，这样还剩下一个球，将其放到任意一个抽屉里，该抽屉都会有两个，故成立。(第二条证明方法与第一条相似，建议百度)。</p><h3 id="应用："><a href="#应用：" class="headerlink" title="应用："></a>应用：</h3><p>给出一个含有 n 个数字的序列，要找一个连续的子序列，使他们的和一定是 c 的倍数(n&lt;=1000000;)</p><p>看到这道题一开始确实没看出来是抽屉原理。。。首先考虑$n^2$的情况，既枚举左端点和右端点，用前缀和来判断，然后TLE了。。。那么这道题和组合数有什么关系呢？我们给每个抽屉标号为0~c-1,代表了$ 当前数 \bmod b$的值，可以发现，如果 $a \bmod b=c \bmod b  (a \geq b )$，则($(a-c) \bmod b=0$),如果我们对于每一位做前缀和处理，sum[i]代表第i位的前缀\和，将每一个sum放入抽屉中，如果有两个sum被放入同一个抽屉，则这两个前缀和之间就是可行区间，就是$if(sum[i] \bmod c=sum[j] \bmod c )    ans= 区间 i -j $</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;c;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">sum[i]=sum[i-1]+a[i];</span><br><span class="line">&#125;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">if(chou[sum[i]%c]!=0)</span><br><span class="line">&#123;</span><br><span class="line">for(int j=chou[sum[i]%c];j&lt;=i;j++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">else chou[sum[i]%c]=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="德·摩根定律"><a href="#德·摩根定律" class="headerlink" title="德·摩根定律"></a>德·摩根定律</h2><h3 id="内容：-1"><a href="#内容：-1" class="headerlink" title="内容："></a>内容：</h3><p>$\lnot(p\vee q )\Longleftrightarrow(\lnot p) \wedge (\lnot q)$</p><p>$\lnot(p\wedge q )\Longleftrightarrow(\lnot p) \vee (\lnot q)$</p><h3 id="证明：-1"><a href="#证明：-1" class="headerlink" title="证明："></a>证明：</h3><p>枚举四种情况即可；</p><h3 id="推广"><a href="#推广" class="headerlink" title="推广"></a>推广</h3><p>$\lnot(p\vee q \vee z)\Longleftrightarrow(\lnot p) \wedge (\lnot q) \wedge (\lnot z)$</p><p>同样可推至多位；</p><p>（<del>虽然我也不知道这和组合数有什么关系</del>）</p><h2 id="容斥原理"><a href="#容斥原理" class="headerlink" title="容斥原理"></a>容斥原理</h2><h3 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h3><p>在计数时，必须注意没有重复，没有遗漏。为了使重叠部分不被重复计算，人们研究出一种新的计数方法，这种方法的基本思想是：先不考虑重叠的情况，把包含于某内容中的所有对象的数目先计算出来，然后再把计数时重复计算的数目排斥出去，使得计算的结果既无遗漏又无重复，这种计数的方法称为容斥原理。</p><h3 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h3><p>由于实在是想不出怎么解释了，还是直接上例子吧。。。</p><p>某校六⑴班有学生$45$人，每人在暑假里都参加体育训练队，其中参加足球队的有$25$人，参加排球队的有$22$人，参加游泳队的有$24$人，足球、排球都参加的有$12$人，足球、游泳都参加的有$9$人，排球、游泳都参加的有$8$人，问：三项都参加的有多少人？</p><p>解：容斥原理有一项很重要的内容：奇加偶减：以本体为例，我们先将单独参加的数加上：sum=$25+22+24=71$,再将参加两项的人减去：$sum-=12+9+8=42$,所以ans=$45-42=3$.</p><p>或许这么说有点不清楚，下面这张图或许更直白：</p><p><img src="\images\实例.png" alt="实例"></p><p>容斥原理应用非常广，具体还是看百度吧。</p><h2 id="排列数"><a href="#排列数" class="headerlink" title="排列数"></a>排列数</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>从 n 个元素的集合 S 中，有序的选出 r 个元素，叫做 S 的一个 r 排列，不同的排列总数$A_n^r$ 或 A(n,r)。</p><p>如果两个排列所含元素不全相同，或所含元素相同但顺序不同，就会被认为是不同的排列。</p><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>$A_n^m=\frac{n!}{(n-m)!}$</p><h3 id="公式证明："><a href="#公式证明：" class="headerlink" title="公式证明："></a>公式证明：</h3><p>$A_n^m=n\times (n-1)\times (n-2)……\times (n-m+1)=\frac{n!}{(n-m)!}$</p><h3 id="特殊情况："><a href="#特殊情况：" class="headerlink" title="特殊情况："></a>特殊情况：</h3><p>$A_n^n=n!$;</p><h2 id="不全相异元素的全排列"><a href="#不全相异元素的全排列" class="headerlink" title="不全相异元素的全排列:"></a>不全相异元素的全排列:</h2><p>所谓不全相异元素的全排列，是指这样一个问题：若在 n 个元素中，有$n_1$个元素彼此相同,$n_2$个元素彼此相同，…,$n_m$个元素彼此相同，且 $n_1+n_2+…+n_m=n$则这 n 个元素的全排列叫做不全相异元素的全排列。</p><p>其方案数为：$\frac{n!}{n_1!+n_2!+n_3!+…+n_m!}$</p><p>证明: 全排列不考虑重复情况下，方案数为$n!$,而每一位重复的方案数为$n_i!$,将每一种重复的方案除去便得到总方案数。</p><h3 id="错位排列"><a href="#错位排列" class="headerlink" title="错位排列:"></a>错位排列:</h3><h4 id="内容：-2"><a href="#内容：-2" class="headerlink" title="内容："></a>内容：</h4><p>所谓错位排列，既将标号为1至n的小球放入标号为1至n的盒子中，求每个小球的标号都不等于其盒子标号的方案数。</p><h4 id="公式："><a href="#公式：" class="headerlink" title="公式："></a>公式：</h4><p>$D_n=n!*(\frac{1}{2!}-\frac{1}{3!}+….+(-1)^n\frac{1}{n!})$</p><h4 id="公式证明：-1"><a href="#公式证明：-1" class="headerlink" title="公式证明："></a>公式证明：</h4><p>首先，我们假设一对数$1,k$，就是在错排问题中的第一项和第k项，那么对于对于总方案数，我们分为两种情况：</p><p><strong>1.第k项在第1位，第1项在第k位，这样的话，错排的方案数与第k位和第i位无关，为D(n-2)</strong></p><p><strong>2将第1项固定在第1位，剩下的错排，方案数D(n-1),然后将第k项与第1项交换，由于第k项不可能在第k位，所以不会与情况1有重复。</strong></p><p>k共有n-1种情况(2~n),故有公式 $D_n=n-1(D_{n-1}+D_{n-2})$</p><p>化简既的上述公式。(确信)</p><h2 id="圆排列："><a href="#圆排列：" class="headerlink" title="圆排列："></a>圆排列：</h2><h4 id="内容：-3"><a href="#内容：-3" class="headerlink" title="内容："></a>内容：</h4><p>既将n个数据选m个，首尾相连，求方案数；</p><h4 id="公式：-1"><a href="#公式：-1" class="headerlink" title="公式："></a>公式：</h4><p>$ans=\frac{A_n^m}{m}$</p><h4 id="公式证明：-2"><a href="#公式证明：-2" class="headerlink" title="公式证明："></a>公式证明：</h4><p>破圆为链，方案总数为$A_n^m$,变成圆之后，不同开头点的方案变的唯一，故除以m。</p><h2 id="组合数"><a href="#组合数" class="headerlink" title="组合数"></a>组合数</h2><p>好，如果你上面这些都看懂了，那么，这节课才刚刚开始。前面那些，你就当我随便说说而已，你完全可以无视掉。</p><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>从 n 个元素的集合 S 中，无序的选出 r 个元素，叫做 S 的一个 r 组合。</p><p>如果两个组合中，至少有一个元素不同，它们就被认为是不同的组合。</p><p>所有不同组合的个数，叫做组合数</p><h3 id="符号"><a href="#符号" class="headerlink" title="符号"></a>符号</h3><p>从m个数中取n个数计做$C_m^n$或c(m,n);</p><h3 id="公式-1"><a href="#公式-1" class="headerlink" title="公式"></a>公式</h3><p>$c_m^n=\frac{A_m^n}{n!}=\frac{\frac{n!}{(n-m)!}}{n!}=\frac{n!}{(n-m)!n!}$</p><h3 id="公示证明"><a href="#公示证明" class="headerlink" title="公示证明"></a>公示证明</h3><p>对于c来说，$c_m^n$与$A_m^n$的区别在于将方案求出之后是否进行全排列，全排列的可能方案数为n!故上述公式成立。</p><h3 id="可重复组合数"><a href="#可重复组合数" class="headerlink" title="可重复组合数"></a>可重复组合数</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>可重复组合数既在n个数中选择m个数，可重复选取，计做$H_n^m$</p><h4 id="公式-2"><a href="#公式-2" class="headerlink" title="公式"></a>公式</h4><p>$H_n^m=c_{n+m-1}^m=\frac{n+m-1}{m!(n-1)!}$</p><h4 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h4><p>可重复组合数的计算公式可以理解为，在n个数的基础上再加上m-1个万能数，这样在选择时，万能数被选就等同于多次选取一个数，可以感性理解一下，比较容易懂。</p><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><p>从 A={1,2,…,n} 中选取 m 个不相邻的组合，其组合数为：$C_{n-m+1}^m$,同样感心理解一下，减去的这些数就当成是两数之间的相邻了。</p><h3 id="递推公式："><a href="#递推公式：" class="headerlink" title="递推公式："></a>递推公式：</h3><p>$c_n^m=c_{n-1}^{m-1}+c_{n-1}^{m}$</p><p>证：选取集合中任意一数作为特定数，将答案分为是否选取该特定数，一种情况为选取，情况数既在其他n-1个数中选取m-1个数的方案数，另一种情况既不选取该特定数，情况数既在其他n-1个数中选取m个数。</p><p><strong>以上知识，大概在普及组+，也就是普及组$t4$难度，提高组吗，这些完全不够<del>勇</del>用，深入一点的可以看我的另一篇博客：<a href="https://shencys.github.io/2019/08/04/组合数学提高/#more">组合数学提高</a>.</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
            <tag> 组合数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于海神阁阁主真实身份的推测</title>
      <link href="/2019/07/29/%E5%85%B3%E4%BA%8E%E6%B5%B7%E7%A5%9E%E9%98%81%E9%98%81%E4%B8%BB%E7%9C%9F%E5%AE%9E%E8%BA%AB%E4%BB%BD%E7%9A%84%E6%8E%A8%E6%B5%8B/"/>
      <url>/2019/07/29/%E5%85%B3%E4%BA%8E%E6%B5%B7%E7%A5%9E%E9%98%81%E9%98%81%E4%B8%BB%E7%9C%9F%E5%AE%9E%E8%BA%AB%E4%BB%BD%E7%9A%84%E6%8E%A8%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<p>最新一册终极斗罗已在7月中旬出版，这册书可谓信息量爆炸。一边，蓝轩宇率队逐级挑战，竟然直接打到了六年级那里？！你只是要开挂的节奏啊！就算你老爸再怎么<del>垃圾</del>牛逼，在你这个年龄还在<del>吃饭、打铁、泡妞</del>,呃，不对，是好好学习，准备吃饭、打铁、泡妞。另一边，不知道是哪个人脑子瓦特要去抢白银龙枪，<del>史莱克这个废物还没守住</del>，被古月娜在路上拦下，然后抢回了白银龙枪（话说古月娜为毛不拷问一下啊）。<strong>重点来了</strong>，<strong>重点来了</strong>，重复一遍，<strong>重点来了</strong>，在古月娜拿回白银龙枪回来之后，当代海神阁主出现了，<strong>她认识古月娜！</strong>也就是说，这一位海神阁主极有可能是《龙王传说》中某个人物，那么，就让我们推理一下，这位神秘的海神阁主究竟是谁。</p> <a id="more"></a><p>在本书中，作者也是给出了几个关于海神阁主的线索：</p><p>1.海神阁主在某种意义上是敌人。</p><p>2.海神阁主身体很奇特。</p><p>3.海神阁主身边这一位很有可能也是《龙王传说》中某个人物，与海神阁主是师生关系（极有可能有那种关系）。</p><p>这三条线索中的第一条，很多人只是单纯的把它认为是指古月娜和海神阁阁主是属于不同阵营的，但实际上，我认为，这条线索应该指，<strong>海神阁主喜欢过唐舞麟</strong>。那么，我们就可以列出以下几个嫌疑人：1.龙雨雪 2.戴云儿 3.舞丝朵4.凌梓晨 5.蓝佛子。</p><p>首先我们先排除1号嫌疑人，虽然龙雨雪 曾经对唐舞麟动过真情，但以龙雨雪 的修为，实在很难达到神的那个境界，而且在《龙王传说》后期，她基本没戏份。。。而且龙五月也没有理由去特意改造自己的身体，所以我们先排除她；</p><p><img src="/images/首页.jpg" alt="avatar"></p><p>再者是二号人物，戴云儿。众所周知，当年戴云儿是对唐舞麟。。。。过的，但是史莱克学院真的会让她来当海神阁阁主吗？估计困难，而且还是那句话，修为不够。。。</p><p><img src="/images/戴云儿.jpg" alt="avatar"></p><p>接下来，是舞丝朵，嫌疑指数：★ 。舞丝朵可能大家都不太有印象，其实就是那个在唐舞麟刚刚入学时的那个天才少女，后来也是史莱克被炸后第一个与唐舞麟见面的人。之所以说她有嫌疑，是应为当年她在海神湖上海神缘时曾经表白过唐舞麟，而且以舞丝朵的修为，并非不可能成为神（虽然和唐舞麟比起来她的天赋不佳，但她同样的也经历了许多，也曾抗击过深渊位面），但是就算有人陪着她度过那么久，也应该是当初同为史莱克一年级的那几个人，而非他的学生，所以嫌疑不大。</p><p><img src="/images/舞丝朵.jpg" alt="avatar"></p><p><strong>重点嫌疑人一号：蓝佛子</strong>，嫌疑指数：★★★，众所周知，蓝佛子是魔皇之女，同样可以化形，也曾经暗恋过唐舞麟，而且，古月娜说的”身体奇特“，可以理解为是指蓝佛子是魂兽，这样蓝佛子就有两条符合了。但是史莱克学院真的会让魂兽（尤其是这种魔皇之女）来做海神阁主吗？而且守在她身边的又是谁呢？所以蓝佛子的概率，并没有特别高。</p><p><img src="/images/蓝佛子.jpg" alt="avatar"></p><p><strong>重点嫌疑人二号：凌梓晨</strong>，，嫌疑指数：★★★★★。让我们逐条比对：</p><p>1.凌所长和50的恩怨就不用我再说了吧？</p><p>2.这句话的意思应该指：凌所长的身体是由单体正向循环源泉核心构成的。在《龙王传说》中，凌所长抱着永恒天国朝血神大阵开了一炮，之后凌所长就提出了一系列惊天地泣鬼神的猜想：</p><p>​           “当我的试验接二连三成功之后，我就有了一个大胆的想法。这个想法我自己都觉得有些疯狂。先，我做了一个假设。这个假设就是，永恒天国其实是个半成品。并不是真正当初那些科学家们想要完成的。或者说是他们只完成了其中的一部分。”       </p><p>​            永恒天国是半成品？这个说法一出，顿时令众人都有种震惊莫名的感觉。 </p><p>​            凌梓晨肯定的道：“通过这次试验，可以说我证明了这一点。之所以说它是半成品，也是因为那脉络的缘故。整个永恒天国内部，完全是按照人体脉络来排列组合这些单体正像源泉核心的。可是，外壳却和内部有些格格不入。固然，它是一枚定装魂导炮弹，可是，在我看来，内部的结构如此的优秀，如此的奇思妙想，外壳却太过普通了。”    </p><p>​            “后来，我在外壳的内部一个角落中，看到了一个很小的铭刻。上面只有四个字，就是：人造战士！”      “当看到这四个字的时候，我顿时有种豁然开朗的感觉。因为我清楚的记得，早在很多年前，就曾经有一位科学家提出过。魂师虽然强大，但是，普通人在我们这个世界上如何利用魂导能量呢？是否可以将魂导能量植入普通人体内，让普通人变得和魂师一样强大呢？”  </p><p>​            “我是一个普通人，我的武魂是废武魂，根本不能修炼。但我也想变得强大，所以，这个课题也一直都是我在研究的方向。我也一直是这么做的。如你们所见，我将机甲第一个植入到自己的身体之中，通过一个个分开的单体正向循环源泉核心来形成它的能量储备。让我自己变成一名级战士。虽然无法量产，但我那时候认为自己是成功的。”    </p><p>​              “可是，这次当我结合了永恒天国内部构造之后，我就发现，原来我的方向虽然是正确的，但距离达到极致还相差的很远、很远。于是，我就有了一个大胆的想法。如果我能够将永恒天国的内部构造，通过脉络仿生学的方式，把极其庞大数量的单体正向循环源泉核心植入到体内，与机甲融合在一起。让我自己变成永恒天国。那么，是不是就能够真正制造出人造强者、级战士呢？”</p><p>上面这段节选自终极斗罗，由于篇幅问题，没有把全部论据截下来，感兴趣的可以自己去找，在第一千八百一十一章前后几章。这段话不仅说明凌所长很有可能将单体正向循环源泉核心注入自己体内，真正成为一个神坻。这也是为什么古月娜为什么会说海神阁主身体奇特的缘故。可能你会说，为什么现在的凌所长脾气那么奇怪，毕竟万年啊，可以磨平世间一切。新书后面也有提到，海神阁主之所以守在海神阁，只是因为守护史莱克，所以支撑凌所长的可能早已不是对魂导器的热爱，而是一种责任，一种唐舞麟留下来的责任。正因为这份责任，凌所长性格中的疯狂消失了，更多的是超然。</p><p>3.守在凌所长身边的，有三种可能：1.路人甲。这种我也不做解释了，可能三少一时想不好怎么填坑，就这么写了。。。2.唐舞麟的克隆体。当年凌所长要了唐舞麟十滴血，可能克隆出了一个新的唐舞麟，并且教会了他做人，所以白衣青年才叫他”老师”。3.依子尘。似乎是网友不肯放过这个角色，非要觉得他是什么毁灭之神转世。。。（或许人家只是一个推进剧情的角色呢）但既然三少花了那么多笔墨去描写，我还是处于尊敬把他写上来吧，首先是修为，依子尘天赋异禀，估计成神问题不大。另外，硬要说，依子尘是史莱克学生，而凌所长是研究魂导器的，好像叫声老师也没什么问题。。。</p><p><img src="/images/白衣青年.jpg" alt="avatar"></p><p>总而言之，我个人认为，凌所长是嫌疑最大的，不过万一三少又脑洞大开，强行解释一下，也是没办法的。。。</p><p>如有错误，欢迎指出。</p>]]></content>
      
      
      <categories>
          
          <category> 终极斗罗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 终极斗罗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三体读后感</title>
      <link href="/2019/07/27/%E4%B8%89%E4%BD%93%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
      <url>/2019/07/27/%E4%B8%89%E4%BD%93%E8%AF%BB%E5%90%8E%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 碎笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水乡往事</title>
      <link href="/2019/07/24/%E6%B0%B4%E4%B9%A1%E5%BE%80%E4%BA%8B/"/>
      <url>/2019/07/24/%E6%B0%B4%E4%B9%A1%E5%BE%80%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 碎笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
